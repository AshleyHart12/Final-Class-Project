{"version":3,"sources":["pages/Landing/Landing.js","pages/GameApp/Cell/Cell.js","pages/GameApp/Grid/Grid.js","pages/GameApp/Picker/Picker.js","pages/GameApp/ColorPickers/ColorPickers.js","pages/GameApp/Graph.js","pages/GameApp/GameApp.js","pages/Quotes/Quotes.js","pages/Recipe/Button/index.js","pages/Recipe/Recipe.js","pages/Recipe/Form/Select/index.js","utils/generate/index.js","pages/Recipe/Form/Checkbox/index.js","pages/Recipe/Form/Radio/index.js","pages/Recipe/Tabs/index.js","utils/data/data.js","utils/mealPlan/index.js","utils/data/index.js","pages/Recipe/Survey/Survey.js","pages/Recipe/Tag/index.js","pages/Recipe/Meal/index.js","pages/Recipe/Plan/Plan.js","components/Nav/Nav.js","App.js","index.js"],"names":["__webpack_require__","e","then","t","bind","Landing","react_default","a","createElement","className","href","Cell","_ref","color","classString","size","Grid","grid","colors","rows","Object","keys","nodes","map","v","GameApp_Cell_Cell","key","Picker","colorIndex","clickHandler","incrementCount","onClick","ColorPickers","pickers","index","GameApp_Picker_Picker","COLORS","randomIndexFromCollection","collection","i","max","length","Math","random","Node","id","classCallCheck","this","Edge","sourceId","destId","weight","Graph","arguments","undefined","edgesByNode","setEdgeWeights","nodeId","edges","topIndex","rightIndex","bottomIndex","leftIndex","w","sameColor","push","_this","forEach","setEdgeWeight","_this2","seenIds","processing","updateEdgeWeights","_loop","currentNodeId","pop","updateColor","edge","indexOf","nodeAId","nodeBId","SIZE","BoardGame","props","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","sliderInput","restart","colorFill","state","graph","count","setState","value","newGrid","class","GameApp_ColorPickers_ColorPickers","GameApp_Grid_Grid","Component","require","Quotes","quote","callApi","axios","get","response","results","data","contents","quotes","author","handleOnClick","event","React","Button","name","concat","type","style","children","link","content","react_router_dom","to","path","Recipe","recipe","Button_Button","Select","onChange","handler","options","ele","val","text","generateId","toString","substr","CheckboxGroup","checkboxData","toggleHandler","isCheckedState","Checkbox_Checkbox","isChecked","Checkbox","htmlFor","checked","RadioGroup","passPropsToChildren","_this$props","handleChange","activeIndex","Children","child","cloneElement","Radio","Tabs","handleClick","passPropsToTabs","active","renderTabContent","defaultIndex","Tab","surveyData","selectOpt","mealCount","planType","dietSpec","healthSpec","mealTypes","3","5","2","calories","min","API","ID","KEY","URL","buildQuery","plan","meals","diet","parseInt","round","health","stitch","labelArr","queries","str","query","ob","label","res","slice","getPlan","queryObj","promises","result","encodeURI","fetch","json","hits","catch","err","console","error","Promise","all","Survey","handleHealth","prevState","healthPreferences","objectSpread","defineProperty","handleSelect","target","handleCalories","selected","setCalories","isNaN","handleDiet","goTo","preventDefault","tabs","getMealPlan","_this$state","loading","par","num","redirect","defaultDiet","_this$data","aria-hidden","Tabs_Tabs","ref","component","Tabs_Tab","heading","Form_Select","Radio_RadioGroup","Radio_Radio","Checkbox_CheckboxGroup","placeholder","react_router","pathname","Tag","icon","Meal","url","src","imgSrc","alt","source","tags","tag","Recipe_Tag","createContent","dataOb","contentArr","mealType","elem","dietLabels","healthLabels","Recipe_Meal","image","toConsumableArray","Plan","location","param","tab","createTabs","Nav","App","Nav_Nav","exact","GameApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.95c6a726.chunk.js","sourcesContent":["// import {Quotes, GameApp, Recipe} from 'react-router';\nimport React from \"react\";\nimport (\"./Landing.css\");\n\n\n\nconst Landing = () => {\n  return (\n    <div>\n        <nav className=\"main_nav\">\n            <ul className=\"d-flex flex-row align-items-center justify-content-center\">\n                <li></li>\n                <li></li>\n                <li></li>\n\t\t\t\t\t\t\t\t{/* <button href=\"/Quotes\">Quotes</button> */}\n                <a href=\"/Quotes\"/><li></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\n        </nav>\n  \n\t    <div className=\"home\">\n\t\t\n\t\t    <div className=\"home_slider_container\">\n\t\t\t    <div className=\"owl-carousel owl-theme home_slider\">\n\n\t\t\t\t\t<div className=\"slide\">\n\t\t\t\t\t\t<div className=\"home_slider_overlay\"></div>\n\t\t\t\t\t\t<div className=\"slide_wrap d-flex flex-column align-items-start justify-content-center\">\n\t\t\t\t\t\t    <div className=\"home_container\">\n\t\t\t\t\t\t\t    <div className=\"container\">\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"home_content active\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"home_subtitle\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"home_title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1><span></span>Time to </h1>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1>Kill</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t    </div>\n\t\t    </div>\n        </div>\n    </div> \n );\n}\n\nexport default Landing;\n","import React from 'react';\nimport './Cell.css';\n\nconst Cell = ({color, size}) => {\n  let classString = \"cell-\" + size + \" \" + color;\n  return (\n    <div className={classString}>\n    \n      {/* <h3>TEST CELL.JS</h3> */}\n    \n    </div>\n  );\n}\n\nexport default Cell;","import React from 'react';\nimport Cell from '../Cell/Cell';\nimport './Grid.css';\n\nconst Grid = ({grid, colors}) => {\n  let rows = Object.keys(grid.nodes).map((v) => {\n    return <Cell key={v} color={colors[grid.nodes[v].color]} size={grid.size} />\n  });\n\n  return (\n    <div className=\"grid\">\n      {rows}\n    </div>\n    \n  );\n}\n\nexport default Grid;","import React from 'react';\n\nimport './Picker.css';\n\nconst Picker = ({color, colorIndex, clickHandler, incrementCount}) => {\n  let className = color + ' picker';\n  return (\n    \n    <div className={className}\n    onClick={(e) => {\n      incrementCount();\n      clickHandler(colorIndex);\n    }}  \n    >\n    \n    </div>\n  );\n}\n\nexport default Picker;","import React from 'react';\nimport Picker from '../Picker/Picker.js';\nimport './ColorPickers.css';\n\nconst ColorPickers = ({colors, clickHandler, incrementCount}) => {\n  let pickers = colors.map(function (color, index) {\n    return <Picker color={color} key={\"picker_\" + color} colorIndex={index} clickHandler={clickHandler} incrementCount={incrementCount}/>\n  });\n  return (\n    <div className=\"pickers\">{pickers}\n    \n    </div>\n  );\n}\n\nexport default ColorPickers;","\n\nconst COLORS = [0,1,2,3,4]; \n\nconst randomIndexFromCollection = (collection) => {\n  var index = 0;\n  for (var i = 1, max = collection.length; i < max; i++) {\n    if (Math.random() < 1/(i+1)) {\n      index = i;\n    }\n  }\n  return index;\n}\n\nclass Node {\n  constructor(id, color) {\n    this.id = id;\n    this.color = color;\n  }\n}\n\nclass Edge {\n  constructor(sourceId, destId, weight) {\n    this.sourceId = sourceId;\n    this.destId = destId;\n    this.weight = weight;\n  }\n}\n\nclass Graph {\n  constructor(size=3) {\n    this.size = size;\n    this.nodes = {};\n    this.edgesByNode = {};\n    for (let i=0; i<size*size; i++) {\n      this.nodes[i] = new Node(i, randomIndexFromCollection(COLORS));\n    }\n    this.setEdgeWeights();\n  }\n\n  setEdgeWeight(id) {\n      let node = this.nodes[id];\n      let nodeId = node.id;\n\n      let edges = [];\n\n      let topIndex = nodeId - this.size;\n      let rightIndex = nodeId + 1;\n      let bottomIndex = nodeId + this.size;\n      let leftIndex = nodeId - 1;\n\n      if (topIndex >= 0) {\n        let w = this.sameColor(nodeId, topIndex) ? 0 : 1;\n        edges.push(new Edge(nodeId, topIndex, w));\n      }\n\n      if (rightIndex % this.size > 0) {\n        let w = this.sameColor(nodeId, rightIndex) ? 0 : 1;\n        edges.push(new Edge(nodeId, rightIndex, w));\n      }\n\n      if (bottomIndex < this.size * this.size) {\n        let w = this.sameColor(nodeId, bottomIndex) ? 0 : 1;\n        edges.push(new Edge(nodeId, bottomIndex, w));\n      }\n\n      if (nodeId % this.size !== 0) {\n        let w = this.sameColor(nodeId, leftIndex) ? 0 : 1;\n        edges.push(new Edge(nodeId, leftIndex, w));\n      }\n\n      this.edgesByNode[nodeId] = edges;\n  }\n\n  setEdgeWeights() {\n    Object.keys(this.nodes).forEach((id) => {\n      this.setEdgeWeight(id);\n    });\n  }\n\n  updateColor(id, color) {\n    this.nodes[id].color = color;\n  }\n\n  colorFill(color) {\n    let seenIds = [];\n    let processing = [0]; // starting at the top left corner (this is a stack)\n    let updateEdgeWeights = [];\n    while (processing.length > 0) {\n      let currentNodeId = processing.pop();\n      this.updateColor(currentNodeId, color);\n      seenIds.push(currentNodeId);\n      this.edgesByNode[currentNodeId].forEach((edge) => {\n        if (seenIds.indexOf(edge.destId) > -1) {\n          return; // bail if we've seen it\n        }\n        if (edge.weight === 0) {\n          processing.push(edge.destId); // process it there is no weight cost\n        }\n        if (edge.weight === 1 && this.nodes[currentNodeId].color === color) {\n          updateEdgeWeights.push(currentNodeId); // update the edge weghts after we finish color filling\n        }\n      });\n    }\n    updateEdgeWeights.forEach((nodeId) => this.setEdgeWeight(nodeId));\n    // BUG: The graph is now in a state that works but not all edges are accurate.\n  }\n\n  sameColor(nodeAId, nodeBId) {\n    return this.nodes[nodeAId].color === this.nodes[nodeBId].color;\n  }\n}\n\nexport { Graph };\n// update a node's color\n// which will update the weights of the nodes.\n// i can update colors and *then* update the weights\n","import React, { Component } from 'react';\nimport Grid from './Grid/Grid';\nimport ColorPickers from './ColorPickers/ColorPickers';\nimport { Graph } from './Graph';\n\nimport './GameApp';\n\nconst SIZE = 12;\nconst COLORS = ['blue','red','green','yellow','orange'];\n\nclass BoardGame extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementCount = this.incrementCount.bind(this);\n    this.sliderInput = this.sliderInput.bind(this);\n    this.restart = this.restart.bind(this);\n    this.colorFill = this.colorFill.bind(this);\n    this.state = {\n      size: SIZE,\n      graph: new Graph(SIZE),\n      colors: COLORS,\n      count: 0,\n    }\n  }\n\n  incrementCount() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  restart() {\n    this.setState({\n      graph: new Graph(this.state.size),\n      count: 0\n    });\n  }\n\n  sliderInput(value) {\n    this.setState({\n      size: value,\n      graph: this.newGrid(value, this.state.colors),\n      count: 0\n    });\n  }\n\n  colorFill(color) {\n    this.state.graph.colorFill(color);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n\n        <div className=\"header\" class=\"row\">\n        <div class=\"col-md-4\"></div>\n          <h1 id=\"colorTitle\">Color Flood</h1>\n          </div>\n\n          <div class=\"row\" id=\"newchanges\">\n          <div class=\"col-md-5\"></div>\n          <div className=\"newgame\" onClick={(e) => this.restart()}>New Game</div>\n          <div className=\"count\">Changes <span>{this.state.count}</span></div>\n        </div>\n\n          <div><ColorPickers colors={this.state.colors} clickHandler={this.colorFill} incrementCount={this.incrementCount}/></div>\n\n          <div className=\"instructions\">\n          <h3>Starting in the top left corner click on the circles to fill the grid! Try to get as few changes as possible!</h3>\n          </div>\n\n          <div id=\"grid\">\n  <Grid grid={this.state.graph} colors={this.state.colors} size={this.state.size}/> \n  </div>\n\n      </div> \n\n    );\n  }\n}\n\nexport default BoardGame;\n","import React from \"react\";\nimport axios from \"axios\";\nrequire (\"./Quotes.css\");\n\nclass Quotes extends React.Component {\n    state = {\n        quote: \"\"\n    };\n    callApi = () => {\n        axios.get(\"https://quotes.rest/qod.json?category=life\")\n        .then((response) => {\n            let results = response.data.contents.quotes[0].quote;\n            let author = response.data.contents.quotes[0].author;\n            this.setState({ quote: results, author })\n        })\n    }\n    handleOnClick = event => {\n       this.callApi();\n    }\n\n    render () {\n        return (\n            <div>\n           \n            <div id=\"welcomeDiv\">                \n                <div>\n                {<h2>{ `\"` + this.state.quote + `\"` }</h2>}\n                {<h3>{ this.state.author }</h3>}\n                \n                </div>\n                </div>\n\n                <button onClick={this.handleOnClick} className=\"buttonQuote\">Inspire Me</button>\n\n                </div>\n            \n        )\n    }\n}\n\nexport default Quotes;","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\n// import '../Button/Button.css'; \n\n/** type of buttons: 1. regular 2. accent 3. transparent **/\nexport default  class Button extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      type : props.type || 'regular',\n      link : props.link || false,\n    }\n  }\n  get = () => {\n    return (\n      <button name={this.props.name}\n              className={`Button Button--${this.state.type} ${this.props.className}` }\n              onClick={this.props.onClick}\n              style={this.props.style}>\n      {this.props.children}\n      </button>\n    )\n  }\n  render(){\n    const content = this.get();\n    return (\n      this.state.link  ?\n      (\n        <Link to={this.props.path || \"#\"}>\n          { content }\n        </Link>\n      )\n      : content\n      )\n  }      \n}\nButton.propTypes = {\n  type: Proptypes.oneOf(['regular','accent','transparent']),\n  link: Proptypes.bool,\n  path: Proptypes.string,\n  className: Proptypes.string,\n  onClick: Proptypes.func,\n  style: Proptypes.object\n}","import React from \"react\";\nimport {BrowserRouter as Router, Route,} from \"react-router-dom\";\n//import axios from \"axios\";\n// import RecipeHome from \"./RecipeHome\";\n// import Survey from \"./Survey\";\n// import Plan from \"./Plan\";\nimport Button from './Button';\n\nrequire (\"./Recipe.css\");\n\n\nclass Recipe extends React.Component {\n    state ={\n        recipe: \"\"\n    };\n\n\nrender () {\n    return (\n        <div className=\"Landing\">\n    <div className=\"Landing__banner\">\n      <h1 className=\"Landing__banner__heading\">Meal Planning Made Easy</h1>\n    </div>\n    <div className=\"Landing__data\">\n      <div className=\"Landing__data__content\">\n        <h1>Make your free time productive with the Meal Planning application.</h1>\n        <h1>Does this sound like you? </h1>\n        <ul>\n          <li>Wasted a lot of time thinking about what I should make for dinner today.</li>\n          <li>Want to watch what I eat but don't know how?</li>\n          <li>Not good at pre-planning meals</li>\n          <li>Want to track my weight and calorie intake</li>\n        </ul>\n        <Button type=\"accent\" link={true} path=\"/survey\" className=\"Landing__data__button\">Let's find that meal plan</Button>\n      </div>\n    </div>\n  </div>\n    )\n\n    // (\n    //     <Router>\n    //         <div>\n    //             <Route path=\"Recipe/recipehome\" component={RecipeHome} />\n    //             <Route path=\"Recipe/survey\" component={Survey} />\n    //             <Route path=\"Recipe/meal-plan\" component={Plan} />\n    //         </div>\n    //     </Router>\n    // )\n}\n};\n\nexport default Recipe;\n//----------------------------------------------------------------------------------\n// import React from 'react';\n// import {BrowserRouter as Router, Route,} from \"react-router-dom\";\n// // import 'font-awesome/css/font-awesome.css';\n// import './RecipeApp.css';\n\n// import RecipeLanding from '../src/components/pages/RecipeLanding';\n// import Survey from '../src/components/pages/Survey';\n// import Plan from '../src/components/pages/Plan';\n// import Footer from '../src/components/shared/Footer';\n\n// function App() {\n//   // render() {\n//     return (\n//       <Router>\n//        <div>\n//         <Route exact path=\"/\" component={RecipeLanding} />\n//         <Route path=\"/survey\" component={Survey} />\n//         <Route path=\"/meal-plan\" component={Plan} />\n//         {/* <Footer /> */}\n//       </div> \n//       </Router>\n//     );\n//   }\n\n\n// export default App;","import React from 'react';\nimport Proptypes from 'prop-types';\n// import './Select.css';\n\nconst Select = (props) => (\n  <select value={props.value} onChange={props.handler} name={props.name} className={`Select ${props.className}`}>\n    {\n      props.options.map(\n        (ele) => <option value={ele.val} key={ele.val}>{ele.text}</option>\n      )\n    }\n  </select>\n)\nSelect.propTypes = {\n  value: Proptypes.number,\n  handler: Proptypes.func,\n  name: Proptypes.string,\n  className: Proptypes.string,\n  options: Proptypes.array\n}\nexport default Select;","export const generateId = () => (\n    '_' + Math.random().toString(36).substr(2,9)\n  )","import React from 'react';\nimport Proptypes from 'prop-types';\n// import './Checkbox.css';\nimport  { generateId } from '../../../../utils/generate';\n\nconst createCheckbox = (data, toggleHandler, isCheckedState) => (\n  <Checkbox\n    name={ data.name }\n    handler={ toggleHandler }\n    key={ data.name }\n    isChecked = { isCheckedState[data.name] ? true : false }\n    text = { data.text }\n  />\n);\n\nconst CheckboxGroup = (props) => (\n  <div className={`${props.className}`}>\n  {props.data.map((checkboxData) => createCheckbox(checkboxData,props.toggleHandler,props.isCheckedState))}\n  </div>\n);\n\nconst Checkbox = (props) => {\n  const { name, text, isChecked, handler } = props;\n  const id = generateId();\n  return (\n    <div className=\"Checkbox\">\n      <label htmlFor={id} className={`Checkbox__label ${props.className}`}>\n        <input\n          id={id}\n          name={name}\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={() => {\n            handler(name);\n          }}\n        />\n      {text}\n      </label>\n    </div>\n  )\n}\nCheckbox.propTypes = {\n  name: Proptypes.string,\n  text: Proptypes.string,\n  isChecked: Proptypes.bool,\n  handler: Proptypes.func,\n  className: Proptypes.string\n}\nCheckboxGroup.propTypes = {\n  data: Proptypes.array,\n  toggleHandler: Proptypes.func,\n  isCheckedState: Proptypes.object,\n  className: Proptypes.string\n}\n\nexport {\n  Checkbox,\n  CheckboxGroup\n}","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport  { generateId } from '../../../../utils/generate';\n\nexport default class RadioGroup extends Component {\n\n  passPropsToChildren = () => {\n    const { children, handleChange, activeIndex } = this.props;\n    return React.Children.map(children,(child,index) =>\n             React.cloneElement(\n              child,\n              {\n                index: index,\n                onChange: handleChange,\n                checked: index === activeIndex,\n              },\n            )\n          );\n  }\n  render(){\n    return(\n      <div className={`RadioGroup ${this.props.className}`} >\n        {this.passPropsToChildren()}\n      </div>\n    )\n  }\n}\nexport const Radio = (props) => {\n  const id = generateId();\n  return (\n    <div>\n      <input className=\"Radio\" type=\"radio\" checked={props.checked} name={props.name} id={id}\n             onChange={\n              () => {\n                props.onChange(props.index);\n               }\n             } />\n      <label htmlFor={id} className={props.className}>{props.children}</label>\n    </div>\n  );\n}\n\nRadio.propTypes = {\n  name: Proptypes.string,\n  index: Proptypes.number,\n  onChange: Proptypes.func,\n  checked: Proptypes.bool,\n  className: Proptypes.string\n}\nRadioGroup.propTypes = {\n  activeIndex: Proptypes.number,\n  handleChange: Proptypes.func,\n  className: Proptypes.string\n}","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\n// import './Tabs.css';\n\nexport default class Tabs extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      activeIndex: props.defaultIndex || 0,\n    }\n  }\n\n  handleClick = (index) => this.setState({activeIndex:index});\n\n  // passing default props to all tabs\n  passPropsToTabs = () => {\n    const { children } = this.props;\n    return React.Children.map(children,(child,index) =>\n             React.cloneElement(\n              child,\n              {\n                index:index,\n                onClick:this.handleClick,\n                active:index === this.state.activeIndex,\n              },\n            )\n          )\n  }\n\n  renderTabContent = () => {\n    const { children } = this.props;\n    const { activeIndex } = this.state;\n    if(children[activeIndex]){\n      return children[activeIndex].props.children;\n    }\n  }\n\n  render(){\n    return(\n      <div className={`Tabs ${this.props.className}`}>\n        <ul className=\"Tabs__head\">\n          {this.passPropsToTabs()}\n        </ul>\n        <div className=\"Tabs__content\">\n          {this.renderTabContent()}\n        </div>\n      </div>\n    )\n  }\n\n}\nexport const Tab = (props) => (\n  <li className={`Tab ${props.className}`}>\n    {/* <a className={`Tab__link ${props.active ? 'Tab__active' : ''}`}\n       onClick={\n         (e) => {\n           e.preventDefault();\n           props.onClick(props.index)\n         }\n        }>\n      <span>{props.heading}</span>\n    </a> */}\n  </li>\n );\n\n\nTab.propTypes = {\n  active: Proptypes.bool,\n  onClick: Proptypes.func,\n  index: Proptypes.number,\n  heading: Proptypes.string,\n  className: Proptypes.string\n}\nTabs.propTypes = {\n  defaultIndex: Proptypes.number,\n  className: Proptypes.string\n}","// creating temporary file to store data manually before backend is created;\n\nconst surveyData = {\n    selectOpt : {\n      mealCount : [{val:3, text:\"Three\"},{val:5, text:\"Five\"},{val:2, text:\"Two\"}],\n      planType :[{val:7, text:\"Weekly\"},{val:1, text:\"Daily\"}],\n    },\n    dietSpec : [\n      {name: \"balanced\", text: \"Balanced Diet (Recommended)\"},\n      {name: \"low-carb\", text: \"Low-Carb (Less than 20% of total calories from carbs)\"},\n      {name: \"low-fat\", text: \"Low-Fat (Less than 15% of total calories from fat)\"},\n    ],\n    healthSpec : [\n      {name: \"vegan\", text: \"Vegan (No meat, poultry, fish, dairy, eggs or honey)\"},\n      {name: \"vegetarian\", text: \"Vegetarian (No wheat, can have gluten though)\"},\n      {name: \"alcohol-free\", text: \"Alcohol-free (No alcohol used or contained)\"},\n      {name: \"peanut-free\", text: \"Peanut Free (No peanuts or products containing peanuts)\"},\n    ],\n    mealTypes : {\n      3: [\"Breakfast\",\"Lunch\",\"Dinner\"],\n      5: [\"Breakfast Snack\",\"Breakfast\",\"Lunch\",\"Afternoon Snack\",\"Dinner\"],\n      2: [\"Brunch\",\"Dinner\"],\n    },\n    calories : {\n      min:1800,\n      max:2500,\n    },\n  }\n  const API = {\n    ID : \"f7842ed1\",\n    KEY : \"9a7e5d00b1e8814fa4cd90d1d9abb91c\",\n    URL : \"https://api.edamam.com/search?\",\n  }\n  export {\n    surveyData as Survey,\n    API,\n  }","import { getAPIData } from '../data';\n\nconst getPlan = (data) =>{\n  const {ID, KEY, URL } = getAPIData();\n  let queryObj = buildQuery(data, ID, KEY);\n  let promises = [], result = {};\n  for(let key in queryObj){\n    let str = encodeURI(URL + queryObj[key]);\n    promises.push(\n      fetch(str)\n      .then((res) => res.json())\n      .then((data) => {\n        result[key] = data.hits;\n      })\n      .catch((err) => console.error(err))\n    );\n  }\n  return Promise.all(promises).then(() => {\n    return result;\n  });\n}\n\n//returns an object of query strings with meal-types as keys\nconst buildQuery = (data, ID, KEY) => {\n  if(!data.plan || !data.meals || !data.calories || !data.diet){\n    return false;\n  }\n  const type = parseInt(data.plan,10);\n  const count =  data.meals.length;\n  const calories = {\n    min: Math.round(parseInt(data.calories.min,10)/count),\n    max: Math.round(parseInt(data.calories.max,10)/count),\n  }\n  let health = \"\";\n  if(data.health){\n    health = stitch(data.health,\"health\");\n  }\n  let labelArr = data.meals;\n  let queries = {};\n  for(let i=0;i<count;i++){\n    let str = labelArr[i];\n    let query = `q=${str}&app_id=${ID}&app_key=${KEY}&to=${type}&diet=${data.diet}${health}&calories=gte ${calories.min}, lte ${calories.max}`;\n    queries[str]= query;\n  }\n  return queries;\n}\n\nconst stitch = (ob, label) => {\n  let res=\"&\";\n  for(let i in ob){\n    if(ob[i].toString() === \"true\"){\n        res+=`${label}=${i}&`;\n    }\n  }\n  //remove that last ampersand\n  return res.slice(0,-1);\n}\n\nexport default getPlan;","import  { Survey, API } from './data';\n\nconst getSurveyData = () => Survey ;\nconst getAPIData = () => API;\n\nexport{\n  getSurveyData,\n  getAPIData,\n}","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Select from '../Form/Select'; //Select\nimport { CheckboxGroup } from '../Form/Checkbox'; //Checkbox\nimport RadioGroup, { Radio } from '../Form/Radio'; //Radio\nimport Button from '../Button'; //Button\nimport Tabs, { Tab } from '../Tabs'; //Tabs\n// import Nav from '../../shared/Nav';\n//api related\nimport getPlan from '../../../utils/mealPlan'; //mealPlan\nimport { getSurveyData } from '../../../utils/data'; //data\n\n// import './Survey.css';\n\nexport default class Survey extends Component{\n\n  componentWillMount(){\n    this.data = getSurveyData();\n    const count = this.data.selectOpt.mealCount[0].val;\n    const plan =  this.data.selectOpt.planType[0].val;\n    const defaultDiet = {\n      activeIndex : 0,\n      name : this.data.dietSpec[0].name,\n    };\n    const calories = {\n      activeIndex : 0,\n      selected : 'rec',\n      min : this.data.calories.min,\n      max : this.data.calories.max,\n    }\n    this.setState({\n      mealCount: count,\n      planType: plan,\n      healthPreferences: {},\n      calories: calories,\n      diet: defaultDiet,\n      loading: false,\n      redirect: false,\n    });\n  }\n\n  handleHealth = (name) => {\n    this.setState ((prevState) => {\n      let value = prevState.healthPreferences[name] ? !prevState.healthPreferences[name] : true;\n      return {healthPreferences : {...prevState.healthPreferences,[name]:value}}\n    });\n  }\n\n  handleSelect = (e) => {\n    const target = e.target;\n    this.setState({[target.name]: parseInt(target.value,10)});\n  }\n\n  handleCalories = (index) => {\n    let selected = (parseInt(index,10) === 1) ? 'custom' : 'rec';\n    this.setState({\n      calories: {...this.state.calories, activeIndex: index, selected: selected }\n    });\n  }\n\n  setCalories = (e) => {\n    const target = e.target;\n    if(target.value) {\n      let value = parseInt(target.value,10);\n      if(isNaN(value)){\n        value = 0;\n      }\n      this.setState({calories: {...this.state.calories,[target.name]: value }});\n    }\n  }\n\n  handleDiet = (index) => {\n    const name = this.data.dietSpec[index].name;\n    this.setState({\n      diet: { activeIndex:index, name:name }\n    });\n  }\n\n  goTo = (e) => {\n    e.preventDefault();\n    const Tabs = this.tabs;\n    switch(e.target.name){\n      case \"next\":\n        Tabs.handleClick(Tabs.state.activeIndex+1);\n        break;\n      case \"back\":\n        Tabs.handleClick(Tabs.state.activeIndex-1);\n        break;\n      default:\n      break;\n    }\n  }\n\n  getMealPlan = (e) => {\n    e.preventDefault();\n    const { mealCount, planType, healthPreferences, calories, diet } = this.state;\n    // const dietPreference = this.data.dietSpec[diet.activeIndex].name;\n    const meals = this.data.mealTypes[mealCount];\n    const res = {\n      plan: planType,\n      health: healthPreferences,\n      calories: {min:calories.min,max:calories.max},\n      diet: diet.name,\n      meals: meals,\n    }\n    this.setState({loading:true},() => {\n      getPlan(res).then(\n        (data) => {\n          let par = {num:this.state.planType,data: data}\n          //stop loading and redirect to meal page\n          this.setState({loading:false, redirect: true, data: par});\n        }\n     );\n    });\n  }\n\n  render(){\n    const { selectOpt, dietSpec, healthSpec } = this.data;\n    return(\n      <div className=\"Survey\">\n        {/* <Nav /> */}\n        {\n          this.state.loading ?\n          <div className=\"Survey__loading\">\n            <h1 className=\"Survey__loading__heading\">Chopping those onions</h1>\n            <i className=\"fa fa-spinner Survey__loading__icon\" aria-hidden=\"true\"></i>\n          </div>\n          :\n          <div className=\"Survey__content\">\n            <div className=\"Survey__heading\"><h1>Some quick questions to generate that awesome meal plan ..</h1></div>\n            <form>\n              <Tabs defaultIndex={0} ref = {component => {this.tabs = component}} className=\"Survey__tabs\">\n                <Tab heading=\"1\">\n                  <h2>How many meals do you have ( or want to have ) in a day?</h2>\n                  <Select name=\"mealCount\" value={this.state.mealCount} handler={this.handleSelect} options={selectOpt.mealCount} />\n                  <div className=\"Survey__goto\">\n                    <Button name=\"next\" onClick={this.goTo} className=\"Survey__goto__button--next\">Next</Button>\n                  </div>\n                </Tab>\n\n                <Tab heading=\"2\">\n                  <h2>Choose a plan type</h2>\n                  <Select name=\"planType\" value={this.state.planType} handler={this.handleSelect} options={selectOpt.planType} />\n                  <div className=\"Survey__goto\">\n                    <Button name=\"back\" onClick={this.goTo} className=\"Survey__goto__button--back\">Back</Button>\n                    <Button name=\"next\" onClick={this.goTo} className=\"Survey__goto__button--next\">Next</Button>\n                  </div>\n                </Tab>\n\n                <Tab heading=\"3\">\n                  <h2>Any dietary preferences?</h2>\n                  <RadioGroup handleChange={this.handleDiet} activeIndex={this.state.diet.activeIndex}>\n                  {\n                    dietSpec.map(\n                      (diet)=> <Radio key={diet.name}>{diet.text}</Radio>\n                    )\n                  }\n                  </RadioGroup>\n                  <div className=\"Survey__goto\">\n                    <Button name=\"back\" onClick={this.goTo} className=\"Survey__goto__button--back\">Back</Button>\n                    <Button name=\"next\" onClick={this.goTo} className=\"Survey__goto__button--next\">Next</Button>\n                  </div>\n                </Tab>\n\n                <Tab heading=\"4\" >\n                  <h2>Any health preferences?</h2>\n                  <CheckboxGroup data={healthSpec} toggleHandler={this.handleHealth} isCheckedState={this.state.healthPreferences} ></CheckboxGroup>\n                  <div className=\"Survey__goto\">\n                    <Button name=\"back\" onClick={this.goTo} className=\"Survey__goto__button--back\">Back</Button>\n                    <Button name=\"next\" onClick={this.goTo} className=\"Survey__goto__button--next\">Next</Button>\n                  </div>\n                </Tab>\n\n                <Tab heading=\"5\">\n                  <h2>Calorie intake</h2>\n                  <RadioGroup handleChange={this.handleCalories} activeIndex={this.state.calories.activeIndex}>\n                    <Radio>Go with recommended</Radio>\n                    <Radio>Choose custom values</Radio>\n                  </RadioGroup>\n                  {\n                    this.state.calories.selected === \"custom\" ?\n                      ( <div className=\"Survey__input--custom\">\n                          <input placeholder=\"min\" type=\"number\" name=\"min\" onChange={this.setCalories} value={this.state.calories.min} />\n                          <input placeholder=\"max\" type=\"number\" name=\"max\" onChange={this.setCalories} value={this.state.calories.max}/>\n                        </div>\n                      )\n                      :null\n                    }\n                  <div className=\"Survey__goto\">\n                    <Button name=\"back\" onClick={this.goTo} className=\"Survey__goto__button--back\">Back</Button>\n                    <Button onClick={this.getMealPlan} className=\"Survey__goto__button--next\">Get Plan!</Button>\n                  </div>\n                </Tab>\n              </Tabs>\n            </form>\n          </div>\n        }\n        {\n          this.state.redirect ? <Redirect to={{pathname:\"/meal-plan\",state:{data:this.state.data}}}/> : null\n        }\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Proptypes from 'prop-types';\n// import './Tag.css';\n\nconst Tag = (props) => (\n  <div className={`Tag ${props.className}`}>\n    <i className={`Tag__icon ${props.icon}`}></i>\n    <span className=\"Tag__Name\">{props.name}</span>\n  </div>\n);\nTag.propTypes = {\n  icon: Proptypes.string,\n  name: Proptypes.string,\n  className: Proptypes.string\n}\n\nexport default Tag;","import React from 'react';\nimport Proptypes from 'prop-types';\nimport Tag from '../Tag';\n// import './Meal.css';\n\nconst Meal = (props) => (\n  // eslint-disable-next-line react/jsx-no-target-blank\n  <a className=\"Meal\" href={props.url} target=\"_blank\">\n    <div className=\"Meal__head\">{props.type}</div>\n    <div className=\"Meal__content\">\n      <div className=\"Meal__content__img\">\n        <img src={props.imgSrc} alt=\"Unavailable\"/>\n      </div>\n      <div className=\"Meal__content__desc\">\n        <h2 className=\"Meal__content__desc--heading\">{props.heading}</h2>\n        <h4 className=\"Meal__content__desc--source\">{props.source}</h4>\n      </div>\n      <div className=\"Meal__content__labels\">\n        {\n          props.tags.map((tag,i) => <Tag icon={props.tags.icon} name={tag} key={`Tag__${i}`} />)\n        }\n      </div>\n    </div>\n  </a>\n);\n\nMeal.propTypes = {\n  url: Proptypes.string,\n  type: Proptypes.string,\n  imgSrc: Proptypes.string,\n  heading: Proptypes.string,\n  source: Proptypes.string,\n  tags: Proptypes.array\n}\nexport default Meal;","import React from 'react';\nimport Meal from '../Meal'; //Meal\nimport Tabs, {Tab} from '../Tabs'; //Tabs\n// import NotFound from '../../shared/NotFound';\n// import Nav from '../../shared/Nav';\n\n// import './Plan.css';\n\nconst createContent = (heading,dataOb,index) => {\n  let contentArr = [];\n  for(let mealType in dataOb){\n    let content = dataOb[mealType][index];\n    if(content){\n      contentArr.push({label:mealType,content:content})\n    }\n  }\n  return (\n    <Tab heading =  { heading } key={`Tab__${index}`} >\n      {\n        contentArr.map((elem,i) => {\n          let recipe = elem.content.recipe;\n          let dietLabels = recipe.dietLabels ? recipe.dietLabels : {};\n          let healthLabels =  recipe.healthLabels ? recipe.healthLabels : {};\n\n          return (\n            <Meal type={elem.label}\n                  imgSrc={ recipe.image ? recipe.image : null }\n                  heading={ recipe.label ? recipe.label : null }\n                  source={ recipe.source ? recipe.source : null }\n                  tags={[...dietLabels, ...healthLabels]}\n                  url={ recipe.url ? recipe.url : \"#\"}\n                  key={`Meal__${i}_${index}`}\n            />\n          )\n        })\n      }\n    </Tab>\n  )\n}\n\nconst createTabs = (count,data) => {\n  let tabs = [];\n  for(let i=0;i<count;i++){\n    let content = createContent(`Day ${i+1}`, data, i);\n    tabs.push(content)\n  }\n  return (\n    <Tabs defaultIndex={0} className=\"Plan__tabs\" >{tabs.map((tab) => tab)}</Tabs>\n  )\n}\n\nconst Plan = (props) => {\n  if(!props.location || !props.location.state || !props.location.state.data) return (\n    <div>\n      {/* <Nav />\n      <NotFound /> */}\n    </div>\n  )\n  let param = props.location.state.data;\n  return(\n    <div className=\"Plan\">\n      {/* <Nav /> */}\n      {createTabs(param.num,param.data)}\n    </div>\n  )\n}\n\nexport default Plan;","import React from \"react\";\nimport ('./Nav.css');\n\nfunction Nav() {\n  return (\n    //<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" id=\"navBar\">\n    <nav className=\"navbar navbar-default\" id=\"navBar\">\n\n    <a className=\"navbar-brand\" href=\"/\">\n       <font color=\"white\">Home</font> \n      </a>\n      <a className=\"navbar-brand\" href=\"/Quotes\">\n        <font color=\"White\">Quotes</font>\n      </a>\n      <a className=\"navbar-brand\" href=\"/GameApp\">\n        <font color= \"white\">Games</font>\n      </a>\n      <a className=\"navbar-brand\" href=\"/Recipe\">\n        <font color=\"white\">Recipes</font>\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch}  from \"react-router-dom\";\n\n//Import bootstrap, font-awsome, etc.\n// import \"./App.css\";\nimport Landing from \"./pages/Landing\";\nimport GameApp from \"./pages/GameApp\";\nimport Quotes from \"./pages/Quotes\";\nimport Recipe from \"./pages/Recipe\";\n// import RecipeHome from \"./pages/Recipe/RecipeHome\";\nimport Survey from \"./pages/Recipe/Survey\";\nimport Plan from \"./pages/Recipe/Plan\";\nimport Nav from \"./components/Nav\";\n\n\nfunction App() {\n   return (\n       <Router>\n           <div>\n               <Nav />\n            <Switch>\n               <Route exact path=\"/\" component={Landing} />\n\n                <Route path=\"/GameApp\" component={GameApp} /> \n                <Route path=\"/Quotes\" component={Quotes} /> \n          \n               <Route path=\"/Recipe\" component={Recipe} />\n               {/* <Route path=\"/Recipe/recipehome\" component={RecipeHome} /> */}\n               <Route path=\"/survey\" component={Survey} />\n               <Route path=\"/meal-plan\" component={Plan} />\n               \n            </Switch>\n           </div>\n       </Router>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Nav from \"./components/Nav\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}